{% extends "PackagistWebBundle::layout.html.twig" %}

{% block content %}
    <h2 class="title">What is Packeton?</h2>
    <p>Packeton is Fork of Packagist.
        The Open Source alternative of Private Packagist for vendors, that based on Satis and Packagist.
    </p>
    <p>You can find the source on <a href="https://github.com/vtsykun/packeton">GitHub</a>.</p>

    {% set url = app.request.getSchemeAndHttpHost() %}
    <h2 class="title" id="how-to-update-packages">Setting up this repository in your projects</h2>
    <p>
        Add this repository to your project's composer.json file,
        then you can require these private packages just like you would with one from public Packagist.
    </p>
    <pre>
{
  "repositories": [{
    "type": "composer",
    "url": "{{ url }}"
  }]
}</pre>
    <p>
        Also you need to authenticate to access their Composer repository, for example to enter credentials run command:
    </p>
    <pre>
composer config --global --auth http-basic.{{ app.request.getHttpHost() }} {{ app.user.username }} {{ app.user.apiToken }}
    </pre>

    <h2 class="title" id="how-to-update-packages">How to update packages?</h2>
    <section class="row">
        <section class="col-md-6">
            <h3>GitHub Service Hook</h3>
            <p>Enabling the Packagist service hook ensures that your package will always be updated instantly when you push to GitHub.</p>
            <p>To do so you can:</p>
            <ul>
                <li>Go to your GitHub repository</li>
                <li>Click the "Settings" button</li>
                <li>Click "Webhooks"</li>
                <li>Add a new hook</li>
                <li>Enter <code>{{ url }}/api/github?token={{ app.user.username|default('USERNAME') ~ ':' ~ app.user.apiToken|default('token') }}</code> as URL</li>
            </ul>
        </section>

        <section class="col-md-6">
            <h3>Bitbucket Webhooks</h3>
            <p>To enable the Bitbucket web hook, go to your BitBucket repository, open the settings and select "Webhooks" in the menu. Add a new hook. You have to enter the Packagist endpoint, containing both your username and API token. Enter <code>{{ url }}/api/bitbucket?token={{ app.user.username|default('USERNAME') ~ ':' ~ app.user.apiToken|default('token') }}</code> as URL. Save your changes and you're done.</p>
        </section>

        <div class="clearfix"></div>
        <section class="col-md-6">
            <h3>Manual hook setup</h3>
            <p>If you do not use Bitbucket or GitHub there is a generic endpoint you can call manually from a git post-receive hook or similar. You have to do a <code>POST</code> request to <code>{{ url }}/api/update-package?token={{ app.user.username|default('USERNAME') ~ ':' ~ app.user.apiToken|default('token') }}</code> with a request body looking like this: <code>{"repository":{"url":"PACKAGIST_PACKAGE_URL"}}</code></p>
            <p>You can do this using curl for example:</p>
            <pre>curl -XPOST -H'content-type:application/json' '{{ url }}/api/update-package?token={{ app.user.username|default('USERNAME') ~ ':' ~ app.user.apiToken|default('token') }}' -d'{"repository":{"url":"PACKAGIST_PACKAGE_URL"}}'</pre>
        </section>

        <section class="col-md-6">
            <h3>GitLab Service</h3>
            <p>To enable the GitLab service integration, go to your GitLab repository,
                open the Settings > Integrations page from the menu.
                Search for Packagist in the list of Project Services.
                Check the "Active" box, enter your packagist.org username and API token.
                Save your changes and you're done.
            </p>

            <h3>GitLab Group Hooks</h3>
            <p>
                Group webhooks will apply to all projects in a group and allow to sync all projects.
                To enable the Group GitLab webhook you must have "Bronze" plan.
                Go to your GitLab Group > Settings > Webhooks. <br>
                Enter <code>{{ url }}/api/update-package?token={{ app.user.username|default('USERNAME') ~ ':' ~ app.user.apiToken|default('token') }}</code> as URL.
            </p>
        </section>

        <div class="clearfix"></div>
        <section class="col-md-6">
            <h3>API Token</h3>
            <p>You can find your API token on <a href="{{ path('fos_user_profile_show') }}">your profile page</a>.</p>
        </section>
    </section>
{% endblock %}
